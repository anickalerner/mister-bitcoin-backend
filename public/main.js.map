{"version":3,"sources":["./src/app/services/bitcoin.service.ts","./src/app/cmps/contact-preview/contact-preview.component.ts","./src/app/cmps/contact-preview/contact-preview.component.html","./src/app/services/contact.service.ts","./src/app/pages/contact-page/contact-page.component.ts","./src/app/pages/contact-page/contact-page.component.html","./src/app/pages/statistic/statistic.component.ts","./src/app/pages/statistic/statistic.component.html","./src/app/pages/contact-details/contact-details.component.ts","./src/app/pages/contact-details/contact-details.component.html","./src/environments/environment.ts","./src/app/cmps/header/header.component.ts","./src/app/cmps/header/header.component.html","./src/app/models/contact.model.ts","./src/app/cmps/delete-confirmation/delete-confirmation.component.ts","./src/app/cmps/delete-confirmation/delete-confirmation.component.html","./src/app/cmps/charts/avg-block-size/avg-block-size.component.ts","./src/app/cmps/charts/avg-block-size/avg-block-size.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/models/chart.model.ts","./src/app/cmps/contact-list/contact-list.component.ts","./src/app/cmps/contact-list/contact-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/cmps/charts/trade-volume/trade-volume.component.ts","./src/app/cmps/charts/trade-volume/trade-volume.component.html","./src/app/cmps/contact-filter/contact-filter.component.ts","./src/app/cmps/contact-filter/contact-filter.component.html","./src/app/app.module.ts","./src/app/pages/contact-edit-page/contact-edit-page.component.ts","./src/app/pages/contact-edit-page/contact-edit-page.component.html","./src/app/cmps/charts/market-price/market-price.component.ts","./src/app/cmps/charts/market-price/market-price.component.html","./src/app/services/user.service.ts","./src/app/services/chart.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BitcoinService {\n  private BASE_URL = 'https://blockchain.info/tobtc?currency=USD&value='\n  \n  private _btc$ = new BehaviorSubject<number>(1)\n  public btc$ = this._btc$.asObservable()\n\n  constructor(private http: HttpClient) { }\n\n  getRate(coins: number){\n    var url = this.BASE_URL + coins.toString();\n    console.log(url);    \n    this.http.get<number>(url).pipe(\n      retry(1),\n      catchError(() => throwError('rate not found!'))\n    ).subscribe(rate => {\n      this._btc$.next(rate);\n    })\n  }\n\n  getMarketPrice(){\n\n  }\n\n  getConfirmedTransactions(){\n\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Contact } from 'src/app/models/contact.model';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteConfirmationComponent } from '../delete-confirmation/delete-confirmation.component';\nimport { ContactService } from 'src/app/services/contact.service';\n@Component({\n  selector: 'contact-preview',\n  templateUrl: './contact-preview.component.html',\n  styleUrls: ['./contact-preview.component.scss']\n})\nexport class ContactPreviewComponent implements OnInit {\n  @Input() contact: Contact;\n  @Output() onDelete: EventEmitter<any> = new EventEmitter();\n\n  closeResult = '';\n  constructor(private location: Location,\n    private router: Router,\n    private modalService: NgbModal,\n    private contactService: ContactService) { }\n\n  ngOnInit(): void {\n  }\n\n  get image() {\n    return this.contactService.getImage(this.contact.name);\n  }\n\n  onContactClick(event) {\n    event.stopPropagation();\n    this.router.navigateByUrl(`contact/${this.contact._id}`);\n  }\n\n  onContactEdit(event) {\n    this.router.navigateByUrl(`contact/edit/${this.contact._id}`);\n  }\n\n  onContactDelete(event) {\n    event.stopPropagation();\n    const modalRef = this.modalService.open(DeleteConfirmationComponent);\n    modalRef.result.then((result) => {\n      // ok\n      this.contactService.deleteContact(this.contact._id).subscribe(\n        () => this.onDelete.emit(this.contact)\n      );\n    }, (reason) => {\n      // cancel\n    });\n    modalRef.componentInstance.contactName = this.contact.name;\n  }\n\n}\n","<li class=\"preview\" (click)=\"onContactClick($event)\">\n    <div class=\"card\">\n        <img [src]=\"image\" alt={{contact.name}} />\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">{{contact.name}}</h5>\n            <p class=\"card-text\">{{contact.phone}}</p>\n            <p class=\"card-text\">{{contact.email}}</p>\n        </div>\n        <div class=\"card-footer\">\n            <button (click)=\"onContactEdit($event)\">Edit</button>\n            <button (click)=\"onContactDelete($event)\">Delete</button>\n        </div>\n    </div>\n</li>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, throwError, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Contact } from '../models/contact.model';\nimport { retry, catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  constructor(private http: HttpClient) {\n  }\n\n  //private BASE_URL = (process.env.NODE_ENV !== 'development') ? '/api/contact' : '//localhost:3030/api/contact';\n  private BASE_URL = '/api/contact';\n    \n\n  private _contacts$ = new BehaviorSubject<Contact[]>([])\n  public contacts$ = this._contacts$.asObservable()\n\n  public loadContacts(filterBy = { name: '', phone: '' }) {\n    this.http.get<Contact[]>(this.BASE_URL)\n      .pipe(\n        map(contacts => {\n          if (filterBy.name !== '') {\n            return contacts.filter(({ name }) => {\n              return name.toLowerCase().includes(filterBy.name.toLowerCase());\n            })\n          }\n          else if (filterBy.phone !== '') {\n            return contacts.filter(({ phone }) => {\n              return phone.includes(filterBy.phone);\n            })\n          }\n          else {\n            return contacts;\n          }\n        })\n      ).subscribe(contacts => {\n        this._contacts$.next(contacts);\n      })\n  }\n\n  public getById(id: string) {\n    return this.http.get<Contact>(`${this.BASE_URL}/${id}`)\n      .pipe(\n        retry(1),\n        catchError(() => throwError(`User id ${id} not found`))\n      );\n  }\n\n  public deleteContact(id: string): Observable<any> {\n    return this.http.delete(`${this.BASE_URL}/${id}`).pipe(\n      tap(_ => console.log(`Deleted contact with id ${id}`),\n        catchError(() => throwError(`Couldn't delete contact with id=${id}`))\n      )\n    )\n  }\n\n  public saveContact(contact: Contact): Observable<any> {\n    return contact._id ? this._updateContact(contact) : this._addContact(contact)\n  }\n\n  private _updateContact(contact: Contact): Observable<any> {\n    return this.http.put(`${this.BASE_URL}/${contact._id}`, contact).pipe(\n      tap(_ => console.log(`Updated contact with id=${contact._id}`)),\n      catchError(()=>throwError(`Couldn't update contact with id=${contact._id}`))\n    )\n  }\n\n  private _addContact(contact: Contact): Observable<any> {\n    return this.http.post(`${this.BASE_URL}`, contact).pipe(\n      tap((newContact: Contact) => console.log(`Added contact with id=${newContact._id}`)),\n      catchError(() => throwError(`Couldn't add contact ${contact.name}`))\n    )\n  }\n\n  private _sort(contacts: Contact[]): Contact[] {\n    return contacts.sort((a, b) => {\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n        return -1;\n      }\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n        return 1;\n      }\n\n      return 0;\n    })\n  }\n\n  private _filter(contacts, term) {\n    term = term.toLocaleLowerCase()\n    return contacts.filter(contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n        contact.phone.toLocaleLowerCase().includes(term) ||\n        contact.email.toLocaleLowerCase().includes(term)\n    })\n  }\n\n  public getImage(name: string) {\n    var firstName = name.split(' ')[0]\n    var lastLetter = firstName.substr(firstName.length - 1, 1)\n    var sex = (lastLetter === 'a' || lastLetter === 'e') ? 'female' : 'male';\n    return `https://avatars.dicebear.com/api/${sex}/${name}.svg?mood[]=happy`;\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Contact } from 'src/app/models/contact.model';\nimport { ContactService } from 'src/app/services/contact.service';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'contact-page',\n  templateUrl: './contact-page.component.html',\n  styleUrls: ['./contact-page.component.scss']\n})\nexport class ContactPageComponent implements OnInit {\n  subscription: Subscription;\n  contacts: Contact[] = [];\n  faPlus = faPlus;\n  \n  constructor(private contactService: ContactService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.contactService.loadContacts();\n    this.subscription = this.contactService.contacts$.subscribe(contacts => {\n      this.contacts = contacts;\n    });\n  }\n  \n  onFilterHandler(filterBy) {\n    this.contactService.loadContacts(filterBy)\n  }\n\n  onAddContact(){\n    this.router.navigate(['/contact/edit'])\n  }\n\n  onDeleteContact(contact){\n    this.contacts = this.contacts.filter(c => c !== contact);\n  }\n}\n","<section>\n<contact-filter (onFilter)=\"onFilterHandler($event)\"></contact-filter>\n<button (click)=\"onAddContact()\">\n    <fa-icon [icon]=\"faPlus\"></fa-icon>Add a contact\n</button>\n<contact-list [contacts]=\"contacts\" (onDelete)=\"onDeleteContact($event)\"></contact-list>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'statistic',\n  templateUrl: './statistic.component.html',\n  styleUrls: ['./statistic.component.scss']\n})\nexport class StatisticComponent implements OnInit {  \n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<section>\n    <market-price></market-price>\n    <trade-volume></trade-volume>\n    <avg-block-size></avg-block-size>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ContactService } from 'src/app/services/contact.service';\nimport { Contact } from 'src/app/models/contact.model';\n\n@Component({\n  selector: 'contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.scss']\n})\nexport class ContactDetailsComponent implements OnInit {\n  contact: Contact = null;\n\n  constructor(private route: ActivatedRoute,\n    private location: Location,\n    private contactService: ContactService) { }\n\n  ngOnInit(): void {\n    const id: string = this.route.snapshot.paramMap.get('id');\n    console.log(id);\n    \n    this.contactService.getById(id).subscribe(contact => this.contact = contact);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  get image() {\n    return this.contactService.getImage(this.contact.name);\n  }\n\n}\n","<section>\n    <div class=\"card mb-3\" style=\"max-width: 540px;\" *ngIf=\"contact\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4\">\n                <img [src]=\"image\" class=\"card-img\" [alt]=\"contact.name\">\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{contact.name}}</h5>\n                    <p class=\"card-text\">Email: {{contact.email}}</p>\n                    <p class=\"card-text\">Phone: {{contact.phone}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button (click)=\"goBack()\">Back</button>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { faHome, faUserFriends, faChartLine } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  faHome = faHome;\n  faUserFriends = faUserFriends;\n  faChartLine = faChartLine;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"main-nav\">\n    <a routerLink=\"/home\" title=\"Home\"><fa-icon [icon]=\"faHome\"></fa-icon></a>\n    <a routerLink=\"/contacts\" title=\"Contacts\"><fa-icon [icon]=\"faUserFriends\"></fa-icon></a>\n    <a routerLink=\"/stats\" title=\"Charts\"><fa-icon [icon]=\"faChartLine\"></fa-icon></a>\n</nav>","export class Contact {\r\n\r\n    constructor(public _id?: string,\r\n        public name: string = '',\r\n        public email: string = '',\r\n        public phone: string = '') {\r\n    }\r\n\r\n    setId() {\r\n        this._id = this._makeId();\r\n    }\r\n    \r\n    _makeId(length = 5) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'delete-confirmation',\n  templateUrl: './delete-confirmation.component.html',\n  styleUrls: ['./delete-confirmation.component.scss']\n})\nexport class DeleteConfirmationComponent implements OnInit {\n  @Input() contactName: string;\n  constructor(public modal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-title\">Delete a contact</h4>\n    <button type=\"button\" class=\"close\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <p><strong>Are you sure you want to delete <span class=\"text-primary\">{{contactName}}</span> profile?</strong></p>\n    <p>All information associated to this user profile will be permanently deleted.\n        <span class=\"text-danger\">This operation can not be undone.</span>\n    </p>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-secondary\" ngbAutofocus (click)=\"modal.dismiss('cancel click')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('Ok click')\">Ok</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ChartService } from 'src/app/services/chart.service';\nimport { Chart } from '../../../models/chart.model';\n\n@Component({\n  selector: 'avg-block-size',\n  templateUrl: './avg-block-size.component.html',\n  styleUrls: ['./avg-block-size.component.scss']\n})\nexport class AvgBlockSizeComponent implements OnInit {\n  absChart: Chart;\n  subscription: Subscription;\n\n  constructor(private chartService: ChartService) {\n    this.absChart = new Chart(['Date', 'USD'], { hAxis: { title: 'Date' }, vAxis: { title: 'USD' } })\n  }\n\n  ngOnInit(): void {\n    this.chartService.loadABSChart();\n    this.subscription = this.chartService.absChart$.subscribe(chart => {\n      this.absChart.setDataFromChart(chart);\n    })\n  }\n}\n","<h1>{{absChart.title}}</h1>\n<google-chart [title]=\"absChart.description\" [type]=\"absChart.type\" [data]=\"absChart.data\" [columns]=\"absChart.columns\"\n    [options]=\"absChart.options\" [width]=\"absChart.width\" [height]=\"absChart.height\">\n</google-chart>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BitcoinService } from 'src/app/services/bitcoin.service';\nimport { User } from '../../models/user.model';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  userSubscription: Subscription;\n  bitcoinSubscription: Subscription;\n  user: User = null;\n  btc: number = 0;\n  constructor(private userService: UserService, private bitcoinService: BitcoinService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser();\n    this.userSubscription = this.userService.user$.subscribe(user => {\n      this.user = user\n      if (user){\n        this.bitcoinService.getRate(this.user.coins);\n        this.bitcoinSubscription = this.bitcoinService.btc$.subscribe(btc => this.btc = btc )\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    this.userSubscription.unsubscribe()\n  }\n\n}\n","<section class=\"container\">\n    <h1 *ngIf=\"user\">Hello {{user.name}}</h1>\n    <p *ngIf=\"user\"><span class=\"icon\"><img src=\"../../../assets/img/coins.png\" alt=\"coins\"/></span>Coins: {{user.coins}}</p>\n    <p><span class=\"icon\"><img src=\"../../../assets/img/bitcoin.png\" alt=\"coins\" /></span>BTC: {{btc}}</p>\n</section>","export class Chart {\r\n    public title: string = '';\r\n    public description: string = '';\r\n    public type: string;\r\n    public data: [];\r\n    public columns: string[];\r\n    public options: {};\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(columns: string[], options, type: string = 'LineChart', width = 800, height = 500) {\r\n        this.type = type;\r\n        this.columns = columns;\r\n        this.options = options;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public setDataFromChart(chart) {\r\n        if (chart) {\r\n            this.data = chart['values'].map(value => [new Date(+value.x * 1000).toLocaleDateString('en'), value.y]);\r\n            this.title = chart.name;\r\n            this.description = chart.description;\r\n        }\r\n        \r\n    }\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Contact } from 'src/app/models/contact.model';\n\n@Component({\n  selector: 'contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss']\n})\nexport class ContactListComponent implements OnInit {\n@Input() contacts: Contact[];\n@Output() onDelete: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDeleteContact(contact){\n    this.onDelete.emit(contact);\n  }\n\n}\n","<ul class=\"contacts-list card-group\">\n    <contact-preview *ngFor=\"let contact of contacts\" [contact]=\"contact\" (onDelete)=\"onDeleteContact($event)\"></contact-preview>\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mister-bitcoin';\n}\n","<div class=\"app\">\r\n    <header></header>\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ChartService } from 'src/app/services/chart.service';\nimport { Chart } from '../../../models/chart.model';\n\n@Component({\n  selector: 'trade-volume',\n  templateUrl: './trade-volume.component.html',\n  styleUrls: ['./trade-volume.component.scss']\n})\nexport class TradeVolumeComponent implements OnInit {\n  tvChart: Chart;\n  subscription: Subscription;\n\n  constructor(private chartService: ChartService) {\n    this.tvChart = new Chart(['Date', 'USD'], { hAxis: { title: 'Date' }, vAxis: { title: 'USD' } })\n  }\n\n  ngOnInit(): void {\n    this.chartService.loadTVChart();\n    this.subscription = this.chartService.tvChart$.subscribe(chart => {\n      this.tvChart.setDataFromChart(chart);\n    })\n  }\n}\n","<h1>{{tvChart.title}}</h1>\n<google-chart [title]=\"tvChart.title\" [type]=\"tvChart.type\" [data]=\"tvChart.data\" [columns]=\"tvChart.columns\"\n    [options]=\"tvChart.options\" [width]=\"tvChart.width\" [height]=\"tvChart.height\">\n</google-chart>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'contact-filter',\n  templateUrl: './contact-filter.component.html',\n  styleUrls: ['./contact-filter.component.scss']\n})\n\nexport class ContactFilterComponent implements OnInit {\n  @Output() onFilter = new EventEmitter();\n  filterBy = {\n    name: '',\n    phone: ''\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  filter(){\n    this.onFilter.emit(this.filterBy);\n  }\n\n}\n","<div class=\"main-filter\">\n    <input type=\"text\" [(ngModel)]=\"filterBy.name\" placeholder=\"Search by name\" (keydown)=\"filter()\">\n    <input type=\"text\" [(ngModel)]=\"filterBy.phone\" placeholder=\"Search by phone\" (keydown)=\"filter()\">\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\nimport { StatisticComponent } from './pages/statistic/statistic.component';\nimport { ContactListComponent } from './cmps/contact-list/contact-list.component';\nimport { ContactPreviewComponent } from './cmps/contact-preview/contact-preview.component';\nimport { ContactFilterComponent } from './cmps/contact-filter/contact-filter.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderComponent } from './cmps/header/header.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MarketPriceComponent } from './cmps/charts/market-price/market-price.component';\nimport { TradeVolumeComponent } from './cmps/charts/trade-volume/trade-volume.component';\nimport { ContactEditPageComponent } from './pages/contact-edit-page/contact-edit-page.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { AvgBlockSizeComponent } from './cmps/charts/avg-block-size/avg-block-size.component';\nimport { DeleteConfirmationComponent } from './cmps/delete-confirmation/delete-confirmation.component';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    ContactPageComponent,\n    ContactDetailsComponent,\n    StatisticComponent,\n    ContactListComponent,\n    ContactPreviewComponent,\n    ContactFilterComponent,\n    HeaderComponent,\n    MarketPriceComponent,\n    TradeVolumeComponent,\n    ContactEditPageComponent,\n    AvgBlockSizeComponent,\n    DeleteConfirmationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GoogleChartsModule,\n    FontAwesomeModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Contact } from 'src/app/models/contact.model';\nimport { ContactService } from 'src/app/services/contact.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'contact-edit-page',\n  templateUrl: './contact-edit-page.component.html',\n  styleUrls: ['./contact-edit-page.component.scss']\n})\nexport class ContactEditPageComponent implements OnInit {\n  contact: Contact = new Contact();\n  contactForm: FormGroup;\n  phoneRegex = /^[+]?[0-9]*[-\\s\\.]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n  buttonText: string = 'Save';\n  constructor(private route: ActivatedRoute,\n    private contactService: ContactService,\n    private fb: FormBuilder, \n    private router: Router,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    const id: string = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.contactService.getById(id).subscribe(contact => {\n        this.contact = contact;\n        this.setForm();\n      });\n    }\n    else{\n      this.setForm();\n    }\n  }\n\n  setForm(){\n    this.contactForm = this.fb.group({\n      name: [this.contact.name, [Validators.required, Validators.maxLength(50)]],\n      phone: [this.contact.phone, [Validators.required, Validators.pattern(this.phoneRegex)]],\n      email: [this.contact.email, [Validators.required, Validators.email]]\n    })\n  }\n  \n  onSave() {\n    var data = this.contactForm.value\n    if (this.contact._id){\n      data = {...data, _id: this.contact._id};\n    }\n    this.contactService.saveContact(data).subscribe(\n      () => this.router.navigateByUrl('contacts')\n    );\n  }\n\n  get image() {\n    return this.contactService.getImage(this.contact.name);\n  }\n\n  goBack(){\n    this.location.back();\n  }\n\n}\n","<section>\n    <div class=\"contact-form\" *ngIf=\"contactForm\">\n        <img [src]=\"image\" [alt]=\"contact.name\" />\n        <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSave()\" class=\"flex column\">\n            <label>Name\n                <input type=\"text\" formControlName=\"name\" placeholder=\"Name\" required>\n            </label>\n            <label>Phone\n                <input type=\"phone\" formControlName=\"phone\" placeholder=\"+1 (123) 333-4444\">\n            </label>\n            <label>Email\n                <input type=\"email\" formControlName=\"email\" placeholder=\"Email\">\n            </label>\n            <div class=\"flex justify-between\">\n                <button type=\"submit\" [disabled]=\"!contactForm.valid\">Save</button>\n                <button type=\"button\" (click)=\"goBack()\" class=\"btn-outline\">Back</button>\n            </div>\n        </form>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ChartService } from 'src/app/services/chart.service';\nimport { Chart } from '../../../models/chart.model';\n@Component({\n  selector: 'market-price',\n  templateUrl: './market-price.component.html',\n  styleUrls: ['./market-price.component.scss']\n})\nexport class MarketPriceComponent implements OnInit {\n  mpChart: Chart;\n  subscription: Subscription;\n\n  constructor(private chartService: ChartService) {\n    this.mpChart = new Chart(['Date', 'USD'], { hAxis: { title: 'Date' }, vAxis: { title: 'USD' } })\n  }\n\n  ngOnInit(): void {\n    this.chartService.loadMPChart();\n    this.subscription = this.chartService.mpChart$.subscribe(chart => {\n      this.mpChart.setDataFromChart(chart);      \n    })\n  }\n}","<h1>{{mpChart.title}}</h1>\n<google-chart\n[title]=\"mpChart.description\" \n[type]=\"mpChart.type\" \n[data]=\"mpChart.data\" \n[columns]=\"mpChart.columns\" \n[options]=\"mpChart.options\" \n[width]=\"mpChart.width\" \n[height]=\"mpChart.height\">\n</google-chart>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { retry, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  private BASE_URL = 'http://localhost:3000/user'\n\n  private _user$ = new BehaviorSubject<User>(null)\n  public user$ = this._user$.asObservable()\n\n  public getUser() {\n    this.http.get<User>(this.BASE_URL).pipe(\n      retry(1),\n      catchError(() => throwError('user not found!'))\n    ).subscribe(user => {\n        this._user$.next(user);\n      })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { retry, catchError, map, reduce } from 'rxjs/operators';\nimport { Chart } from '../models/chart.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ChartService {\n    constructor(private http: HttpClient) {\n    }\n\n    private BASE_URL = 'http://localhost:3000';\n\n    private _mpChart$ = new BehaviorSubject(null)\n    public mpChart$ = this._mpChart$.asObservable()\n\n    public loadMPChart(){\n        this.loadChart('/market-price', this._mpChart$);\n    }\n\n    private _tvChart$ = new BehaviorSubject(null)\n    public tvChart$ = this._tvChart$.asObservable()\n\n    public loadTVChart() {\n        this.loadChart('/trade-volume', this._tvChart$);\n    }\n    private _absChart$ = new BehaviorSubject(null)\n    public absChart$ = this._absChart$.asObservable()\n\n    public loadABSChart() {\n        this.loadChart('/avg-block-size', this._absChart$);\n    }\n\n    public loadChart(location: string, observable) {\n        this.http.get(this.BASE_URL + location)\n            .pipe(map(chart => chart),\n                catchError(this.handleError('loadChart', []))\n        ).subscribe(chart => {\n            observable.next(chart);\n        })\n    }\n\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n            console.error(operation, error);\n            return of(result as T);\n        };\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\nimport { ContactEditPageComponent } from './pages/contact-edit-page/contact-edit-page.component';\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { StatisticComponent } from './pages/statistic/statistic.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomePageComponent },\n  { path: 'contact/edit/:id', component: ContactEditPageComponent },\n  { path: 'contact/edit', component: ContactEditPageComponent },\n  { path: 'contact/:id', component: ContactDetailsComponent },\n  { path: 'contacts', component: ContactPageComponent },\n  { path: 'stats', component: StatisticComponent }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}